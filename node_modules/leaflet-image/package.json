{
  "name": "leaflet-image",
  "version": "0.0.0",
  "description": "export leaflet maps as images",
  "main": "index.js",
  "scripts": {
    "make": "browserify -s leafletImage index.js > leaflet-image.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/leaflet-image.git"
  },
  "keywords": [
    "leaflet",
    "map",
    "image",
    "export",
    "canvas"
  ],
  "author": {
    "name": "Tom MacWright"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/mapbox/leaflet-image/issues"
  },
  "readme": "## leaflet-image\n\nExport images out of Leaflet maps without a server component, by using\nCanvas and [CORS](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing).\n\n### usage\n\nbrowserify\n\n    npm install --save leaflet-image\n\nweb\n\n    curl https://raw.github.com/mapbox/leaflet-image/gh-pages/leaflet-image.js > leaflet-image.js\n\n### example\n\n```js\nvar map = L.mapbox.map('map', 'tmcw.map-u4ca5hnt').setView([38.9, -77.03], 14);\nleafletImage(map, function(canvas) {\n    // now you have canvas\n});\n\n// example thing to do with that canvas\nfunction doImage(err, canvas) {\n    var img = document.createElement('img');\n    var dimensions = map.getSize();\n    img.width = dimensions.x;\n    img.height = dimensions.y;\n    img.src = canvas.toDataURL();\n    document.getElementById('images').innerHTML = '';\n    document.getElementById('images').appendChild(img);\n}\n```\n\n### api\n\n```js\nleafletImage(map, callback)\n```\n\nmap is a `L.map` or `L.mapbox.map`, callback takes `(err, canvas)`.\n",
  "readmeFilename": "README.md",
  "_id": "leaflet-image@0.0.0",
  "dist": {
    "shasum": "9671c0827b68b67e053cd38a78771390d277a293"
  },
  "_from": "leaflet-image@*",
  "_resolved": "https://registry.npmjs.org/leaflet-image/-/leaflet-image-0.0.0.tgz"
}
